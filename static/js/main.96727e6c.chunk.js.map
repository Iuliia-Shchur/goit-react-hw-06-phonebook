{"version":3,"sources":["App/App.module.css","Components/Filter/Filter.module.css","redux/actions.js","redux/selector.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App/App.js","redux/reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css"],"names":["module","exports","actions","addContacts","createAction","name","number","payload","id","uuidv4","deleteContacts","filterChange","getContacts","state","contacts","items","getFilter","filter","allFilteredContacts","normalizedFilter","toLowerCase","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","inputChange","evt","target","value","resetForm","className","s","formWrapper","form","onSubmit","preventDefault","find","contact","alert","label","input","type","placeholder","pattern","onChange","button","ContactList","listWrapper","list","map","item","text","onClick","Filter","e","App","title","createReducer","initialContacts","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96727e6c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3IGEg\",\"title\":\"App_title__22_Hm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3zZhe\",\"input\":\"Filter_input__3urHx\"};","import { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst addContacts = createAction(\"contacts/add\", ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContacts = createAction(\"contacts/delete\");\n\nconst filterChange = createAction(\"contacts/filter\");\n\nconst actions = { addContacts, deleteContacts, filterChange };\n\nexport default actions;\n","export const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const allFilteredContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import s from \"./ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport actions from \"../../redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts } from \"../../redux/selector\";\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const inputChange = (evt) => {\n    switch (evt.target.name) {\n      case \"name\":\n        setName(evt.target.value);\n        break;\n\n      case \"number\":\n        setNumber(evt.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return alert(\"This contact has already been added to the list\");\n    }\n    dispatch(actions.addContacts({ name, number }));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <div className={s.formWrapper}>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            onChange={inputChange}\n          />\n        </label>\n\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            value={number}\n            name=\"number\"\n            placeholder=\"Number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            onChange={inputChange}\n          />\n        </label>\n        <button className={s.button}>Add contact</button>\n      </form>\n    </div>\n  );\n}\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n  handleSubmit: PropTypes.func,\n  inputChange: PropTypes.func,\n};\n\nexport default ContactForm;\n","import s from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { allFilteredContacts } from \"../../redux/selector\";\nimport actions from \"../../redux/actions\";\n\nconst ContactList = () => {\n  const getContacts = useSelector(allFilteredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.listWrapper}>\n      <ul className={s.list}>\n        {getContacts.map(({ name, number, id }) => {\n          return (\n            <li className={s.item} key={id}>\n              <p className={s.text}>{name}:</p>\n              <p className={s.text}>{number}</p>\n              <button\n                className={s.button}\n                type=\"button\"\n                onClick={() => dispatch(actions.deleteContacts(id))}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  getContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ),\n\n  // deleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import s from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\nimport actions from \"../../redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/selector\";\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  // const onFilterChange =(e) => {\n  // dispatch(actions.filterContact(e.currentTarget.value));\n  // }\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={filter}\n        onChange={(e) => dispatch(actions.filterChange(e.target.value))} //можно вынести в отдельную функцию, она вверху\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  // onFilterChange: PropTypes.func,\n  filter: PropTypes.string,\n};\n\nexport default Filter;\n","import s from \"./App.module.css\";\nimport ContactForm from \"../Components/ContactForm/ContactForm\";\nimport ContactList from \"../Components/ContactList/ContactList\";\nimport Filter from \"../Components/Filter/Filter\";\n\nfunction App() {\n  return (\n    <div className={s.App}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\n\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./actions\";\nimport initialContacts from \"../contacts.json\";\n\nconst items = createReducer(initialContacts, {\n  [actions.addContacts]: (state, { payload }) => [...state, payload],\n  [actions.deleteContacts]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.filterChange]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate persistor={persistor}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"ContactForm_formWrapper__fyxlr\",\"form\":\"ContactForm_form__3vLq9\",\"label\":\"ContactForm_label__2aOyu\",\"input\":\"ContactForm_input__3XDsO\",\"button\":\"ContactForm_button__3k6um\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1DN1S\",\"text\":\"ContactList_text__1_4Kq\",\"button\":\"ContactList_button__1oh6I\"};"],"sourceRoot":""}